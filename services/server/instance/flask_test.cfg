import os


# Get the folder of the top-level directory of this project
BASEDIR = os.path.abspath(os.path.dirname(__file__))

# Update later by using a random number generator and moving
# the actual key outside of the source code under version control
SECRET_KEY = os.environ.get('SECRET_KEY', default='AdfCrpgjUGNRRQlFtFlj3tj2sbqKZHY0HXvvjOu6SyoTL7W+stoxlWGMQw9sD2qEnKc')
DEBUG = True

SESSION_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE='Lax'

# SQLAlchemy
DB_HOST = os.environ.get('DATABASE_HOST', default='127.0.0.1')
DB_NAME = os.environ.get('DATABASE_NAME', default='pocketsiem')
DB_PASSWORD = os.environ.get('DATABASE_PASSWORD', default='secure_password')
DB_PORT = os.environ.get('DATABASE_PORT', default='5433')
DB_USER = os.environ.get('DATABASE_USER', default='pocketsiem')

SQLALCHEMY_DATABASE_URI = f"postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"
SQLALCHEMY_COMMIT_ON_TEARDOWN=True

# Whois checks will be conducted against submitted IPs. Require Internet connection. 
# Set to False if servers runs in isolated segment.

ONLINE_CHECKS=os.environ.get('ONLINE_CHECKS', default='True')

# Enable the TESTING flag to disable the error catching during request handling
# so that you get better error reports when performing test requests against the application.
TESTING = True

# Disable CSRF tokens in the Forms (only valid for testing purposes!)
WTF_CSRF_ENABLED = False
